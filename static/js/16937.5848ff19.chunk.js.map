{"version":3,"file":"static/js/16937.5848ff19.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-tree/customElement.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { html } from \"lit\";\nimport { LitElement, createEvent, setAttribute } from \"@arcgis/lumina\";\nimport { b as focusElement, n as nodeListToArray, s as slotChangeGetAssignedElements, t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nfunction isTreeItem(element) {\n  return element?.tagName === \"CALCITE-TREE-ITEM\";\n}\nfunction getTraversableItems(root) {\n  return Array.from(root.querySelectorAll(\"calcite-tree-item:not([disabled])\")).filter(\n    (item) => {\n      let currentItem = item;\n      while (currentItem !== root && currentItem !== void 0) {\n        const parent = currentItem.parentElement;\n        const traversable = !isTreeItem(parent) || !parent.hasChildren || parent.expanded;\n        if (!traversable) {\n          return false;\n        }\n        currentItem = currentItem.parentElement;\n      }\n      return true;\n    }\n  );\n}\nconst styles = css`:host{display:block}:host(:focus){outline:2px solid transparent;outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Tree extends LitElement {\n  constructor() {\n    super();\n    this.items = [];\n    this.lines = false;\n    this.parentExpanded = false;\n    this.scale = \"m\";\n    this.selectedItems = [];\n    this.selectionMode = \"single\";\n    this.calciteTreeSelect = createEvent({ cancelable: false });\n    this.listen(\"focus\", this.onFocus);\n    this.listen(\"focusin\", this.onFocusIn);\n    this.listen(\"focusout\", this.onFocusOut);\n    this.listen(\"calciteInternalTreeItemSelect\", this.onInternalTreeItemSelect);\n    this.listen(\"keydown\", this.keyDownHandler);\n  }\n  static {\n    this.properties = { child: [7, {}, { reflect: true, type: Boolean }], lines: [7, {}, { reflect: true, type: Boolean }], parentExpanded: [5, {}, { type: Boolean }], scale: [3, {}, { reflect: true }], selectedItems: [0, {}, { attribute: false }], selectionMode: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  willUpdate(changes) {\n    if (changes.has(\"parentExpanded\") && (this.hasUpdated || this.parentExpanded !== false)) {\n      this.updateItems();\n    }\n    const parent = this.el.parentElement?.closest(\"calcite-tree\");\n    this.lines = parent ? parent.lines : this.lines;\n    this.scale = parent ? parent.scale : this.scale;\n    this.selectionMode = parent ? parent.selectionMode : this.selectionMode;\n    this.child = !!parent;\n  }\n  onFocus() {\n    if (!this.child) {\n      const focusTarget = this.el.querySelector(\"calcite-tree-item[selected]:not([disabled])\") || this.el.querySelector(\"calcite-tree-item:not([disabled])\");\n      focusElement(focusTarget);\n    }\n  }\n  onFocusIn(event) {\n    const focusedFromRootOrOutsideTree = event.relatedTarget === this.el || !this.el.contains(event.relatedTarget);\n    if (focusedFromRootOrOutsideTree) {\n      this.el.removeAttribute(\"tabindex\");\n    }\n  }\n  onFocusOut(event) {\n    const willFocusOutsideTree = !this.el.contains(event.relatedTarget);\n    if (willFocusOutsideTree) {\n      this.el.tabIndex = this.getRootTabIndex();\n    }\n  }\n  onInternalTreeItemSelect(event) {\n    if (this.child) {\n      return;\n    }\n    const target = event.target;\n    const childItems = nodeListToArray(target.querySelectorAll(\"calcite-tree-item\"));\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.selectionMode === \"ancestors\") {\n      this.updateAncestorTree(event);\n      return;\n    }\n    const isNoneSelectionMode = this.selectionMode === \"none\";\n    const shouldSelect = this.selectionMode !== null && (!target.hasChildren || target.hasChildren && (this.selectionMode === \"children\" || this.selectionMode === \"multichildren\"));\n    const shouldDeselectAllChildren = this.selectionMode === \"multichildren\" && target.hasChildren;\n    const shouldModifyToCurrentSelection = !isNoneSelectionMode && event.detail.modifyCurrentSelection && (this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n    const shouldClearCurrentSelection = !shouldModifyToCurrentSelection && ((this.selectionMode === \"single\" || this.selectionMode === \"multiple\") && childItems.length <= 0 || this.selectionMode === \"children\" || this.selectionMode === \"multichildren\" || this.selectionMode === \"single-persist\" && !target.hasChildren);\n    const shouldUpdateExpand = [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode) && target.hasChildren;\n    const targetItems = [];\n    if (shouldSelect) {\n      targetItems.push(target);\n    }\n    if (shouldClearCurrentSelection) {\n      const selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item[selected]\"));\n      selectedItems.forEach((treeItem) => {\n        if (!targetItems.includes(treeItem)) {\n          treeItem.selected = false;\n        }\n      });\n    }\n    if (shouldUpdateExpand && [\"multiple\", \"none\", \"single\", \"single-persist\"].includes(this.selectionMode)) {\n      target.expanded = !target.expanded;\n    }\n    if (shouldDeselectAllChildren) {\n      childItems.forEach((item) => {\n        item.selected = false;\n        if (item.hasChildren) {\n          item.expanded = false;\n        }\n      });\n    }\n    if (shouldModifyToCurrentSelection) {\n      window.getSelection().removeAllRanges();\n    }\n    if (shouldModifyToCurrentSelection && target.selected) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = false;\n        }\n      });\n    } else if (!isNoneSelectionMode) {\n      targetItems.forEach((treeItem) => {\n        if (!treeItem.disabled) {\n          treeItem.selected = this.selectionMode !== \"single\" || !treeItem.selected;\n        }\n      });\n    }\n    this.selectedItems = isNoneSelectionMode ? [] : nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    this.calciteTreeSelect.emit();\n    event.stopPropagation();\n  }\n  keyDownHandler(event) {\n    if (this.child) {\n      return;\n    }\n    const root = this.el;\n    const target = event.target;\n    const supportedKeys = [\"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"ArrowUp\", \"Home\", \"End\", \"Tab\"];\n    if (!(isTreeItem(target) && this.el.contains(target)) || !supportedKeys.includes(event.key)) {\n      return;\n    }\n    const traversableItems = getTraversableItems(root);\n    if (event.key === \"Tab\") {\n      traversableItems.forEach((item) => item.tabIndex = -1);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const nextItem = traversableItems[currentItemIndex + 1];\n      nextItem?.focus();\n      event.preventDefault();\n      return;\n    }\n    if (event.key === \"ArrowUp\") {\n      const currentItemIndex = traversableItems.indexOf(target);\n      const previousItem = traversableItems[currentItemIndex - 1];\n      previousItem?.focus();\n      event.preventDefault();\n      return;\n    }\n    if (event.key === \"ArrowLeft\") {\n      if (target.hasChildren && target.expanded) {\n        target.expanded = false;\n        event.preventDefault();\n        return;\n      }\n      const rootToItemPath = traversableItems.slice(0, traversableItems.indexOf(target)).reverse();\n      const parentItem = rootToItemPath.find((item) => item.depth === target.depth - 1);\n      parentItem?.focus();\n      event.preventDefault();\n      return;\n    }\n    if (event.key === \"ArrowRight\") {\n      if (!target.disabled && target.hasChildren) {\n        if (!target.expanded) {\n          target.expanded = true;\n          event.preventDefault();\n        } else {\n          const currentItemIndex = traversableItems.indexOf(target);\n          const nextItem = traversableItems[currentItemIndex + 1];\n          nextItem?.focus();\n          event.preventDefault();\n        }\n      }\n      return;\n    }\n    if (event.key === \"Home\") {\n      const firstNode = traversableItems.shift();\n      if (firstNode) {\n        firstNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n    if (event.key === \"End\") {\n      const lastNode = traversableItems.pop();\n      if (lastNode) {\n        lastNode.focus();\n        event.preventDefault();\n      }\n      return;\n    }\n  }\n  updateAncestorTree(event) {\n    const item = event.target;\n    const updateItem = event.detail.updateItem;\n    if (item.disabled || item.indeterminate && !updateItem) {\n      return;\n    }\n    const ancestors = [];\n    let parent = item.parentElement.closest(\"calcite-tree-item\");\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.parentElement.closest(\"calcite-tree-item\");\n    }\n    const childItems = Array.from(item.querySelectorAll(\"calcite-tree-item:not([disabled])\"));\n    const childItemsWithNoChildren = childItems.filter((child) => !child.hasChildren);\n    const childItemsWithChildren = childItems.filter((child) => child.hasChildren);\n    let futureSelected;\n    if (updateItem) {\n      futureSelected = item.hasChildren ? !(item.selected || item.indeterminate) : !item.selected;\n    } else {\n      futureSelected = item.selected;\n    }\n    childItemsWithNoChildren.forEach((el) => {\n      el.selected = futureSelected;\n      el.indeterminate = false;\n    });\n    function updateItemState(childItems2, item2) {\n      const selected = childItems2.filter((child) => child.selected);\n      const unselected = childItems2.filter((child) => !child.selected);\n      item2.selected = selected.length === childItems2.length;\n      item2.indeterminate = selected.length > 0 && unselected.length > 0;\n    }\n    childItemsWithChildren.reverse().forEach((el) => {\n      const directChildItems = Array.from(el.querySelectorAll(\":scope > calcite-tree > calcite-tree-item\"));\n      updateItemState(directChildItems, el);\n    });\n    if (updateItem) {\n      if (item.hasChildren) {\n        updateItemState(childItems, item);\n      } else {\n        item.selected = futureSelected;\n        item.indeterminate = false;\n      }\n    }\n    ancestors.forEach((ancestor) => {\n      const descendants = nodeListToArray(ancestor.querySelectorAll(\"calcite-tree-item\"));\n      const activeDescendants = descendants.filter((el) => el.selected);\n      if (activeDescendants.length === 0) {\n        ancestor.selected = false;\n        ancestor.indeterminate = false;\n        return;\n      }\n      const indeterminate = activeDescendants.length < descendants.length;\n      ancestor.indeterminate = indeterminate;\n      ancestor.selected = !indeterminate;\n    });\n    this.selectedItems = nodeListToArray(this.el.querySelectorAll(\"calcite-tree-item\")).filter((i) => i.selected);\n    if (updateItem) {\n      this.calciteTreeSelect.emit();\n    }\n  }\n  updateItems() {\n    this.items.forEach((item) => item.parentExpanded = this.parentExpanded);\n  }\n  handleDefaultSlotChange(event) {\n    const items = slotChangeGetAssignedElements(event).filter((el) => el.matches(\"calcite-tree-item\"));\n    this.items = items;\n    this.updateItems();\n  }\n  getRootTabIndex() {\n    return !this.child ? 0 : -1;\n  }\n  render() {\n    this.el.ariaMultiSelectable = this.child ? void 0 : toAriaBoolean(this.selectionMode === \"multiple\" || this.selectionMode === \"multichildren\");\n    this.el.role = !this.child ? \"tree\" : void 0;\n    setAttribute(this.el, \"tabIndex\", this.getRootTabIndex());\n    return html`<slot @slotchange=${this.handleDefaultSlotChange}></slot>`;\n  }\n}\ncustomElement(\"calcite-tree\", Tree);\nexport {\n  Tree\n};\n"],"names":["isTreeItem","element","tagName","styles","css","_templateObject","_taggedTemplateLiteral","Tree","LitElement","constructor","super","this","items","lines","parentExpanded","scale","selectedItems","selectionMode","calciteTreeSelect","createEvent","cancelable","listen","onFocus","onFocusIn","onFocusOut","onInternalTreeItemSelect","keyDownHandler","willUpdate","changes","_this$el$parentElemen","has","hasUpdated","updateItems","parent","el","parentElement","closest","child","focusTarget","querySelector","focusElement","event","relatedTarget","contains","removeAttribute","tabIndex","getRootTabIndex","target","childItems","nodeListToArray","querySelectorAll","preventDefault","stopPropagation","updateAncestorTree","isNoneSelectionMode","shouldSelect","hasChildren","shouldDeselectAllChildren","shouldModifyToCurrentSelection","detail","modifyCurrentSelection","shouldClearCurrentSelection","length","shouldUpdateExpand","includes","targetItems","push","forEach","treeItem","selected","expanded","item","window","getSelection","removeAllRanges","disabled","filter","i","emit","root","key","traversableItems","Array","from","currentItem","getTraversableItems","currentItemIndex","indexOf","nextItem","focus","previousItem","parentItem","slice","reverse","find","depth","lastNode","pop","firstNode","shift","updateItem","indeterminate","ancestors","childItemsWithNoChildren","childItemsWithChildren","futureSelected","updateItemState","childItems2","item2","unselected","ancestor","descendants","activeDescendants","handleDefaultSlotChange","slotChangeGetAssignedElements","matches","render","ariaMultiSelectable","toAriaBoolean","role","setAttribute","html","_templateObject2","_Tree","properties","reflect","type","Boolean","attribute","customElement"],"sourceRoot":""}